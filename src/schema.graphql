scalar DateTime

type Query {
    info: String!
    findPost(id: Int!): Post
    feed: [Post!]!
}

type Mutation {
    createPost(content: String, attatchment_url: String): Post
    updatePost(id: Int!, content: String, attatchment_url: String ): Post
    deletePost(id: Int!): Post
    signup(first: String, last: String, email: String, username: String, location: String, password: String, phone: String, profile_pic_url: String): AuthPayload
    login(username: String!, password: String!): AuthPayload
}

type Post {
    id: Int!
    attatchment_url: String
    content: String
    # time_posted: DateTime
    author: User
}

type User {
  id: Int!
#   created_on: DateTime
  email: String
  first: String
  last: String
  location: String
  password: String
  phone: String
  profile_pic_url: String
  username: String
  posts: [Post]
}

type AuthPayload {
  token: String
  user: User
}